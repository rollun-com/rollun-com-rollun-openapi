<?php
declare(strict_types=1);

namespace ClientTest\OpenAPI\V1\DTO;

use Articus\DataTransfer\Annotation as DTA;

/**
 */
class Resource
{
    /**
     * Unique identificator of order (generated by server).
     * @DTA\Data(field="id", nullable=true)
     * @DTA\Validator(name="Type", options={"type":"string"})
     * @var string
     */
    public $id;
    /**
     * Order number received from supplier
     * @DTA\Data(field="requiredField", nullable=true)
     * @DTA\Validator(name="Type", options={"type":"string"})
     * @var string
     */
    public $requiredField;
    /**
     * @DTA\Data(field="optionalField", nullable=true)
     * @DTA\Validator(name="Type", options={"type":"string"})
     * @var string
     */
    public $optionalField;
    /**
     * @DTA\Data(field="objectField", nullable=true)
     * @DTA\Strategy(name="Object", options={"type":\ClientTest\OpenAPI\V1\DTO\NestedObject::class})
     * @DTA\Validator(name="TypeCompliant", options={"type":\ClientTest\OpenAPI\V1\DTO\NestedObject::class})
     * @var \ClientTest\OpenAPI\V1\DTO\NestedObject
     */
    public $objectField;
    /**
     * List of ordered products
     * @DTA\Data(field="arrayField", nullable=true)
     * TODO check validator and strategy are correct and can handle container item type
     * @DTA\Strategy(name="ObjectArray", options={"type":\ClientTest\OpenAPI\V1\DTO\NestedObject::class})
     * @DTA\Validator(name="Collection", options={"validators":{
     *     {"name":"TypeCompliant", "options":{"type":\ClientTest\OpenAPI\V1\DTO\NestedObject::class}}
     * }})
     * @var \ClientTest\OpenAPI\V1\DTO\NestedObject[]
     */
    public $arrayField;
}
